---
import { getCollection } from "astro:content";
import BlogPost from "@/layouts/BlogPost.astro";
import Default from "@/layouts/default.astro";
import TOC from "@/components/TOC.tsx";

export async function getStaticPaths() {
  const pages = await getCollection("page");
  const pagePaths = pages.map((page) => ({
    params: { slug: page.slug === "index" ? "/" : page.slug },
    props: page,
  }));

  const posts = await getCollection("blog");
  const postsPaths = posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));

  return [...pagePaths, ...postsPaths];
}

const props = Astro.props;
const { Content, headings } = await props.render();
let filteredHeadings = headings.filter(heading =>
  heading.text !== "Footnotes"
)
---

{
  props.collection === "blog" ? (
    <BlogPost {...props.data}>
      <Content />
      {filteredHeadings.length > 0 && (
        <TOC 
          client:only="react" 
          headings={filteredHeadings} 
          slot="toc"
        />
      )}
    </BlogPost>
  ) : (
    <Default {...props.data}>
      <div>
        <Content />
      </div>
    </Default>
  )
}
