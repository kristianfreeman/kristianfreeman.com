---
import Default from "@/layouts/default.astro";
import { titleize } from "inflection";
import { getCollection, getEntry, render } from "astro:content";

const tags = await getCollection("tag");

const { tag: slug } = Astro.params;
const tag = await getEntry("tag", slug);
if (!tag) return Astro.redirect("/")

let Content;
try {
  const rendered = await render(tag);
  Content = rendered.Content;
} catch (e) {
  console.error(e);
  Content = null;
}

let posts = await getCollection("blog", ({ data }) =>
  // @ts-ignore
  data.tags.map(({ slug: sl }) => sl).includes(slug),
);


posts = posts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((post) => !post.data.draft);

export async function getStaticPaths() {
  let tags = await getCollection("tag");

  return tags.map((tag) => ({
    params: { tag: tag.slug },
    props: { tag },
  }));
}
---

<Default fullWidth title={titleize(tag.data.name)}>
  <h1>{tag.data.name}</h1>

  <div class="*:font-normal">
    {Content && <Content />}
  </div>

  <section class="mt-8 w-full">
    <div class="flex flex-col gap-2">
      {posts.map((post) => (
        <a 
          class="no-underline hover:no-underline rounded hover:bg-secondary/80 p-4"
          href={`/${post.slug}`}
        >
          <div class="leading-6 m-0 flex justify-between">
            <span class="flex-1">
              {post.data.title}
            </span>
            <span class="font-medium m-0 text-foreground/80">
              {post.data.pubDate.toISOString()}
            </span>
          </div>
        </a>
      ))}
    </div>
  </section>

  <section class="mt-12">
    <div class="flex flex-wrap gap-4">
      {
        tags.map((tag) => (
          <a href={`/tags/${tag.slug}`} class="text-sm">
            #{tag.slug}
          </a>
        ))
      }
    </div>
  </section>
</Default>
