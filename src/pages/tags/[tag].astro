---
import Default from "@/layouts/default.astro";
import BlogPostList from "@/components/BlogPostList.astro";
import { titleize } from "inflection";
import { getCollection, getEntry, render } from "astro:content";

const tags = await getCollection("tag");

const { tag: slug } = Astro.params;
const tag = await getEntry("tag", slug);
if (!tag) return Astro.redirect("/")

let Content;
try {
  const rendered = await render(tag);
  Content = rendered.Content;
} catch (e) {
  console.error(e);
  Content = null;
}

let posts = await getCollection("blog", ({ data }) => {
  // Handle case where tags might not be properly defined
  if (!data.tags || !Array.isArray(data.tags)) {
    return false;
  }
  // Check if the tag slug is included in this post's tags
  return data.tags.some(tag => {
    if (typeof tag === 'string') {
      return tag === slug;
    } else if (tag && typeof tag === 'object' && 'id' in tag) {
      return tag.id === slug;
    }
    return false;
  });
});


posts = posts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .filter((post) => !post.data.draft);

export async function getStaticPaths() {
  let tags = await getCollection("tag");

  return tags.map((tag) => ({
    params: { tag: tag.slug },
    props: { tag },
  }));
}

console.log(tag);
---

<Default fullWidth title={titleize(tag.data.name)}>
  <h1>{tag.data.name}</h1>

  <h2 class="font-normal m-0">
    {tag.data.description && <span>{tag.data.description}</span>} 
    <span class="inline-block {tag.data.description ? 'ml-1' : ''}">
      {posts.length} post{posts.length !== 1 ? 's' : ''}{posts.length > 0 ? ` since ${posts[posts.length - 1].data.pubDate.getFullYear()}` : ''}.
    </span>
  </h2>

  <div class="*:font-normal mt-4">
    {Content && <Content />}
  </div>

  <section class="mt-8 w-full">
    <BlogPostList posts={posts} />
  </section>

  <section class="mt-12">
    <div class="flex flex-wrap gap-4">
      {
        tags.map((tag) => (
          <a href={`/tags/${tag.slug}`} class="text-sm">
            #{tag.slug}
          </a>
        ))
      }
    </div>
  </section>
</Default>
