---
import Default from "@/layouts/default.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
type Post = CollectionEntry<"blog">;

let posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
).filter(post => !post.data.draft);

let firstPostYear = posts[posts.length - 1].data.pubDate.getFullYear();

let tags = await getCollection("tag")

const postsGroupedByYear = posts.reduce(
  (acc: Record<string, Post[]>, post: Post) => {
    const year = post.data.pubDate.getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {}
);
---

<Default fullWidth title="Blog">
  <h1 class="font-bold">
    Blog
  </h1>

  <h2 class="font-normal m-0">
    {posts.length} posts that I've written since {firstPostYear}.
  </h2>

  <section class="mt-8 w-full">
    <div class="flex flex-col gap-2">
      {Object.keys(postsGroupedByYear)
        .sort((a, b) => Number(b) - Number(a))
        .map((year) =>
          postsGroupedByYear[year].map((post) => (
          <a 
            class="no-underline hover:no-underline rounded hover:bg-secondary/80 p-4"
            href={`/${post.slug}`}
          >
            <div class="leading-6 m-0 flex">
              <span class="flex-1">
                {post.data.title}
              </span>
              <span class="font-medium m-0 text-foreground/60">
                {post.data.pubDate.toISOString()}
              </span>
            </div>
          </a>
        )))
      }
    </div>
  </section>

  <section class="mt-12">
    <div class="flex flex-wrap gap-4">
      {tags.map((tag) => <a href={`/tags/${tag.slug}`}>#{tag.slug}</a>)}
    </div>
  </section>
</Default>
