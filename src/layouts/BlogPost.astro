---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { Calendar, Tag } from "lucide-react";

import BaseHead from "@/components/BaseHead.astro";
import CommandMenu from "@/components/CommandMenu.tsx";
import Footer from "@/components/Footer.tsx";
import Footnotes from "@/components/Footnotes.tsx";
import FormattedDate from "@/components/FormattedDate.astro";
import Header from "@/components/Header.tsx";
import Repo from "@/components/Repo.tsx";
import WarningBanner from "@/components/WarningBanner.astro";

type Props = CollectionEntry<"blog">["data"];

const allTags = await getCollection("tag");
const posts = await getCollection("blog");

const { title, description, pubDate, repo, tags } = Astro.props;
console.log(tags);
const blogPostTags = await getCollection("tag", ({ slug }) => {
  // @ts-ignore
  return tags.map(({ slug: sl }) => sl).includes(slug);
});

const hasWarning = blogPostTags.find((tag) => tag.data.warning);
---

<html lang="en" class="dark">
  <head>
    <BaseHead title={title} description={description} />
    <script src="https://platform.twitter.com/widgets.js"></script>
  </head>

  <body class="bg-base px-4 w-full">
    <Header post={Astro.props} url={Astro.url} />
    <div class="max-w-screen-md lg:max-w-screen-lg mx-auto space-y-8">
      <main>
        <article class="flex gap-4">
          <div class="prose">
            <div class="space-y-4">
              <h1 class="tracking-wider">
                {title}
              </h1>

              {description && <h2 class="font-normal">{description}</h2>}

              <div class="flex flex-wrap gap-4 items-center pb-4">
                <div class="flex gap-2 items-center text-foreground/80">
                  <Calendar size={16} />
                  <FormattedDate date={pubDate} />
                </div>

                {
                  blogPostTags.length > 0 && (
                    <span class="flex gap-2 items-center text-foreground/80">
                      <Tag size={16} />
                      <span class="space-x-2">
                        {blogPostTags.map((tag) => (
                          <a href={`/tags/${tag.slug}`}>#{tag.slug}</a>
                        ))}
                      </span>
                    </span>
                  )
                }
              </div>

              {hasWarning && <WarningBanner {...hasWarning.data.warning} />}

              {repo && <Repo client:only="react" repo={repo} />}

              <slot />
            </div>
            <hr />
          </div>

          <slot name="toc" />
        </article>
      </main>
      <Footer />
    </div>
    <Footnotes client:only="react" />
    <CommandMenu client:only="react" posts={posts} tags={allTags} />
  </body>
</html>
