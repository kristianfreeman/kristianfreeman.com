---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { Calendar, Tag } from "lucide-react";

import BaseHead from "@/components/BaseHead.astro";
import CommandMenu from "@/components/CommandMenu.tsx";
import BearPostBanner from "@/components/BearPostBanner.astro";
import OldPostBanner from "@/components/OldPostBanner.astro";
import Header from "@/components/Header.tsx";
import Footnotes from "@/components/Footnotes.tsx";
import Footer from "@/components/Footer.astro";
import FormattedDate from "@/components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];
const posts = await getCollection("blog");
const allTags = [
  ...new Set(
    posts
      .map((post) => post.data.tags)
      .flat()
      .filter(Boolean)
  ),
].sort();
const { title, description, pubDate, tags } = Astro.props;
const isOld = tags.includes("archive");
const isBearRelated = tags.includes("bear");
---

<html lang="en" class="dark">
  <head>
    <BaseHead title={title} />
    <script src="https://platform.twitter.com/widgets.js"></script>
  </head>

  <body>
    <CommandMenu client:only="react" posts={posts} tags={allTags} />
    <div class="container mx-auto space-y-8">
      <Header post={Astro.props} url={Astro.url} />
      <main>
        <article>
          <div class="prose">
            <div class="space-y-4">
              <h1 class="tracking-wider">
                {title}
              </h1>

              {description && <h2>{description}</h2>}

              <div class="flex items-center gap-3">
                <img
                  src="https://f.kristianfreeman.com/kf.jpg"
                  alt="Kristian Freeman"
                  class="rounded-full w-8 h-8 m-0 object-cover border-2"
                />
                <a class="text-primary" href="https://twitter.com/@kristianf_"
                  >Kristian Freeman</a
                >
              </div>

              <div class="flex items-center flex-wrap gap-4">
                <div class="flex items-center gap-2">
                  <Calendar size={16} />
                  <FormattedDate date={pubDate} />
                </div>
                {
                  tags.length > 0 && (
                    <span class="flex items-center gap-2">
                      <Tag size={16} />
                      <span class="space-x-2">
                        {tags.map((tag) => (
                          <a href={`/tags/${tag}`}>#{tag}</a>
                        ))}
                      </span>
                    </span>
                  )
                }
              </div>
            </div>
            {isBearRelated && <BearPostBanner />}
            {isOld && <OldPostBanner />}
            <slot />
            <hr />
          </div>
        </article>
      </main>
      <Footer />
    </div>
    <Footnotes client:only="react" />
  </body>
</html>
